// <auto-generated />
using System;
using Loan.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Loan.Data.Migrations
{
    [DbContext(typeof(LoanDbContext))]
    [Migration("20220721203857_update_account_schema")]
    partial class update_account_schema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Loan.Entity.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("DurationTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(10005);

                    b.Property<decimal?>("Interest")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(18,2)")
                        .HasComputedColumnSql("(Principal * (Rate/100)) PERSISTED");

                    b.Property<int>("InterestCycleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(10037);

                    b.Property<decimal>("Principal")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("RecordStatusId")
                        .HasColumnType("int");

                    b.Property<int>("RepaymentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(10011);

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(10027);

                    b.Property<decimal?>("TotalAmount")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(18,2)")
                        .HasComputedColumnSql("(Principal * (1+(Rate/100))) PERSISTED");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("VersionNo")
                        .IsConcurrencyToken()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("DurationTypeId");

                    b.HasIndex("InterestCycleTypeId");

                    b.HasIndex("RecordStatusId");

                    b.HasIndex("RepaymentTypeId");

                    b.HasIndex("StatusId");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("Loan.Entity.AccountComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordStatusId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("VersionNo")
                        .IsConcurrencyToken()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("RecordStatusId");

                    b.HasIndex("StatusId");

                    b.ToTable("AccountComment", (string)null);
                });

            modelBuilder.Entity("Loan.Entity.AccountTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("JournalEntryTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(10034);

                    b.Property<int>("RecordStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TransactionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(10001);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("VersionNo")
                        .IsConcurrencyToken()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("JournalEntryTypeId");

                    b.HasIndex("RecordStatusId");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("AccountTransaction", (string)null);
                });

            modelBuilder.Entity("Loan.Entity.ChangeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChangeOperationId")
                        .HasColumnType("int");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PrimaryKey")
                        .HasColumnType("int");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TransactionId");

                    b.ToTable("ChangeEntity", (string)null);
                });

            modelBuilder.Entity("Loan.Entity.ChangeEntityDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChangeEntityId")
                        .HasColumnType("int");

                    b.Property<string>("ColumnName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NewValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChangeEntityId");

                    b.ToTable("ChangeEntityDetail", (string)null);
                });

            modelBuilder.Entity("Loan.Entity.ChangeTransaction", b =>
                {
                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TransactionPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransactionId");

                    b.ToTable("ChangeTransaction", (string)null);
                });

            modelBuilder.Entity("Loan.Entity.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AddressLine3")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmergencyContactId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullAddress")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("replace(replace([AddressLine1] + ' ' + [AddressLine2] + ' ' + [AddressLine3], '  ',' '), '  ', ' ')  PERSISTED");

                    b.Property<string>("FullName")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("replace(replace([FirstName] + ' ' + [MiddleName] + ' ' + [LastName], '  ',' '), '  ', ' ') PERSISTED");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RecordStatusId")
                        .HasColumnType("int");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("VersionNo")
                        .IsConcurrencyToken()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmergencyContactId");

                    b.HasIndex("RecordStatusId");

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("Loan.Entity.Lookup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("LookupSetId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RecordStatusId")
                        .HasColumnType("int");

                    b.Property<int>("SeedTypeId")
                        .HasColumnType("int");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("VersionNo")
                        .IsConcurrencyToken()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LookupSetId");

                    b.HasIndex("RecordStatusId");

                    b.ToTable("Lookup", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 10001,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Projected transaction",
                            LookupSetId = 10001,
                            Name = "Projection",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10002,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Actual transaction",
                            LookupSetId = 10001,
                            Name = "Actual",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10004,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Adjustment transaction",
                            LookupSetId = 10001,
                            Name = "Adjustment",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10003,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Interest transaction",
                            LookupSetId = 10001,
                            Name = "Interest",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10006,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Week duration",
                            LookupSetId = 10002,
                            Name = "Week",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10005,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Month duration",
                            LookupSetId = 10002,
                            Name = "Month",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10007,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Quarter duration",
                            LookupSetId = 10002,
                            Name = "Quarter",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10008,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Half year duration",
                            LookupSetId = 10002,
                            Name = "Half Year",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10009,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Yearly duration",
                            LookupSetId = 10002,
                            Name = "Year",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10010,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Daily repayment schedule",
                            LookupSetId = 10003,
                            Name = "Daily",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10011,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Weekly repayment schedule",
                            LookupSetId = 10003,
                            Name = "Weekly",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10012,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Monthly repayment schedule",
                            LookupSetId = 10003,
                            Name = "Monthly",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10013,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Twice a month repayment schedule",
                            LookupSetId = 10003,
                            Name = "Twice Monthly",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10015,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Active record",
                            LookupSetId = 10014,
                            Name = "Active",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10016,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Deleted record",
                            LookupSetId = 10014,
                            Name = "Deleted",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10018,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Pending record",
                            LookupSetId = 10014,
                            Name = "Pending",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10017,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Archive record",
                            LookupSetId = 10014,
                            Name = "Archive",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10019,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Constant seed data",
                            LookupSetId = 10018,
                            Name = "Constant",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10020,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "User updated seed data",
                            LookupSetId = 10018,
                            Name = "User Updated",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10021,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Updatable seed data",
                            LookupSetId = 10018,
                            Name = "Updatable",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10023,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Create entity",
                            LookupSetId = 10001,
                            Name = "Create",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10024,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Update entity",
                            LookupSetId = 10001,
                            Name = "Update",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10025,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Delete entity",
                            LookupSetId = 10001,
                            Name = "Delete",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10027,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Account is pending and waiting for approval",
                            LookupSetId = 10026,
                            Name = "Pending",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10028,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Account is approved",
                            LookupSetId = 10026,
                            Name = "Approved",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10029,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Account is on going",
                            LookupSetId = 10026,
                            Name = "Active",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10031,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Account is declined and waiting for approval",
                            LookupSetId = 10026,
                            Name = "Declined",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10030,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Account is cancelled",
                            LookupSetId = 10026,
                            Name = "Cancelled",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10032,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Account is completed",
                            LookupSetId = 10026,
                            Name = "Completed",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10034,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Debit Entry",
                            LookupSetId = 10033,
                            Name = "Debit",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10035,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Credit Entry",
                            LookupSetId = 10033,
                            Name = "Credit",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10037,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Monthly Cycle",
                            LookupSetId = 10036,
                            Name = "Monthly",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10038,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Yearly Cycle",
                            LookupSetId = 10036,
                            Name = "Yearly",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        });
                });

            modelBuilder.Entity("Loan.Entity.LookupSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RecordStatusId")
                        .HasColumnType("int");

                    b.Property<int>("SeedTypeId")
                        .HasColumnType("int");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("VersionNo")
                        .IsConcurrencyToken()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecordStatusId");

                    b.ToTable("LookupSet", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 10001,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Transaction types",
                            Name = "Transaction Type",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10002,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Duration types",
                            Name = "Duration Type",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10003,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Repayment schedules",
                            Name = "Repayment Schedule",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10014,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Record statuses",
                            Name = "Record Status",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10018,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Seed constant types",
                            Name = "Seed Constant Type",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10022,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Change Operations Create, Update & Delete",
                            Name = "Change Operations",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10026,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Account statuses i.e. Active, Pending etc",
                            Name = "Account Status",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10033,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Journal Entry Type (Debit/Credit)",
                            Name = "Journal Entry Type",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        },
                        new
                        {
                            Id = 10036,
                            CreateBy = "la:seeduser",
                            CreatedAt = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Interest Cycle Type",
                            Name = "Interest Cycle Type",
                            RecordStatusId = 10015,
                            SeedTypeId = 10019,
                            TransactionId = new Guid("ab3b99d9-b824-4277-b367-2151d6e403a8"),
                            UpdatedBy = "",
                            VersionNo = 0
                        });
                });

            modelBuilder.Entity("Loan.Entity.Account", b =>
                {
                    b.HasOne("Loan.Entity.Client", "Client")
                        .WithMany("Accounts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Loan.Entity.Lookup", "DurationType")
                        .WithMany()
                        .HasForeignKey("DurationTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Loan.Entity.Lookup", "InterestCycleType")
                        .WithMany()
                        .HasForeignKey("InterestCycleTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Loan.Entity.Lookup", "RepaymentType")
                        .WithMany()
                        .HasForeignKey("RepaymentTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Loan.Entity.Lookup", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("DurationType");

                    b.Navigation("InterestCycleType");

                    b.Navigation("RepaymentType");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Loan.Entity.AccountComment", b =>
                {
                    b.HasOne("Loan.Entity.Account", "Account")
                        .WithMany("AccountComments")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Loan.Entity.Lookup", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Loan.Entity.AccountTransaction", b =>
                {
                    b.HasOne("Loan.Entity.Account", "Account")
                        .WithMany("AccountTransactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Loan.Entity.Lookup", "JournalEntryType")
                        .WithMany()
                        .HasForeignKey("JournalEntryTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Loan.Entity.Lookup", "TransactionType")
                        .WithMany()
                        .HasForeignKey("TransactionTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("JournalEntryType");

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("Loan.Entity.ChangeEntity", b =>
                {
                    b.HasOne("Loan.Entity.ChangeTransaction", "ChangeTransaction")
                        .WithMany("ChangeEntities")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("ChangeTransaction");
                });

            modelBuilder.Entity("Loan.Entity.ChangeEntityDetail", b =>
                {
                    b.HasOne("Loan.Entity.ChangeEntity", "ChangeEntity")
                        .WithMany("ChangeEntityDetails")
                        .HasForeignKey("ChangeEntityId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("ChangeEntity");
                });

            modelBuilder.Entity("Loan.Entity.Client", b =>
                {
                    b.HasOne("Loan.Entity.Client", "EmergencyContact")
                        .WithMany()
                        .HasForeignKey("EmergencyContactId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("EmergencyContact");
                });

            modelBuilder.Entity("Loan.Entity.Lookup", b =>
                {
                    b.HasOne("Loan.Entity.LookupSet", "LookupSet")
                        .WithMany("Lookups")
                        .HasForeignKey("LookupSetId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("LookupSet");
                });

            modelBuilder.Entity("Loan.Entity.Account", b =>
                {
                    b.Navigation("AccountComments");

                    b.Navigation("AccountTransactions");
                });

            modelBuilder.Entity("Loan.Entity.ChangeEntity", b =>
                {
                    b.Navigation("ChangeEntityDetails");
                });

            modelBuilder.Entity("Loan.Entity.ChangeTransaction", b =>
                {
                    b.Navigation("ChangeEntities");
                });

            modelBuilder.Entity("Loan.Entity.Client", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("Loan.Entity.LookupSet", b =>
                {
                    b.Navigation("Lookups");
                });
#pragma warning restore 612, 618
        }
    }
}
